<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.almawave.iride.cognitive.mediabar</groupId>
        <artifactId>mediabar</artifactId>
        <version>8.5.4-SNAPSHOT</version>
    </parent>

    <artifactId>integration-war-react</artifactId>
    <packaging>war</packaging>

    <name>${root.project.name} - Web Archive - React</name>

    <properties>
        <skipAssembly>true</skipAssembly>
        <assemblyFile>channelbar-${project.version}-react</assemblyFile>
        <keycloak.version>12.0.1</keycloak.version>
        <maven.frontend.plugin.version>1.12.1</maven.frontend.plugin.version>
        <nodeJsInstallDir>${java.io.tmpdir}</nodeJsInstallDir>
        <finalName>channelbar</finalName>
        <nodejs.version>v16.20.0</nodejs.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.jboss.spec.javax.websocket</groupId>
            <artifactId>jboss-websocket-api_1.1_spec</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_4.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>it.almawave.iride.cognitive.hub-sdk</groupId>
            <artifactId>hub-sdk-web-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>presenter</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>ch-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>react-view</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.1.4</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <version>2.30.1</version>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.inject</groupId>
                    <artifactId>jakarta.inject-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.ws.rs</groupId>
                    <artifactId>jakarta.ws.rs-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.annotation</groupId>
                    <artifactId>jakarta.annotation-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.glassfish.hk2.external</groupId>
                    <artifactId>jakarta.inject</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.activation</groupId>
                    <artifactId>jakarta.activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
       	<dependency>
    		<groupId>org.mock-server</groupId>
    		<artifactId>mockserver-netty</artifactId>
    		<version>5.14.0</version>
    		<scope>test</scope>
		</dependency>
		<dependency>
    		<groupId>javax.ws.rs</groupId>
    		<artifactId>javax.ws.rs-api</artifactId>
    		<version>2.0</version>
    		<scope>test</scope>
		</dependency>
    </dependencies>

    <build>
        <finalName>${finalName}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*/**</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/extra-content</directory>
                <includes>
                    <include>*/**</include>
                </includes>
                <targetPath>${project.build.directory}/extra-content</targetPath>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${maven.frontend.plugin.version}</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>npm compile intl: en</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run compile -- src/features/lang/en.json --out-file src/features/compiled-lang/en.json</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm compile intl: it</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run compile -- src/features/lang/it.json --out-file src/features/compiled-lang/it.json</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm build react</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run-script build</arguments>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <nodeVersion>${nodejs.version}</nodeVersion>
                    <installDirectory>${nodeJsInstallDir}/${nodejs.version}</installDirectory>
                    <workingDirectory>${project.basedir}/src/main/frontend</workingDirectory>
                    <environmentVariables>
                        <BUILD_PATH>${project.basedir}/target/${finalName}</BUILD_PATH>
                    </environmentVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <move file="${project.basedir}/target/${finalName}/index.html" todir="${project.basedir}/target/${finalName}/WEB-INF/classes/" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Dependencies>org.slf4j,
                                com.fasterxml.jackson.core.jackson-databind</Dependencies>
                        </manifestEntries>
                    </archive>
                    <failOnMissingWebXml>
                        false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven 
                    build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>prepare-react-war-for-docker</id>
             <activation>
                <property>
                    <name>buildImage</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <configuration>
                            <feature-packs>
                                <feature-pack>
                                    <location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
                                </feature-pack>
                                <feature-pack>
                                    <groupId>org.keycloak</groupId>
                                    <artifactId>keycloak-adapter-galleon-pack</artifactId>
                                    <version>${keycloak.version}</version>
                                </feature-pack>
                            </feature-packs>
                            <contextRoot>false</contextRoot>
                            <cloud>
                                <type>kubernetes</type>
                            </cloud>
                            <layers>
                                <layer>jaxrs</layer>
                                <layer>cdi</layer>
                                <layer>microprofile-config</layer>
                                <layer>keycloak-client-oidc</layer>
                                <layer>logging</layer>
                            </layers>
                            <excludedLayers>
                                <layer>bean-validation</layer>
                                <layer>git-history</layer>
                                <layer>deployment-scanner</layer>
                                <layer>jsonb</layer>
                            </excludedLayers>
                            <cliSessions>
                                <cliSession>
                                    <resolveExpressions>false</resolveExpressions>
                                    <scriptFiles>
                                        <scriptFile>src/main/config/oidc.cli</scriptFile>
                                    </scriptFiles>
                                </cliSession>
                            </cliSessions>
                            <extraServerContentDirs>
                                <extraServerContentDir>${project.build.directory}/extra-content/</extraServerContentDir>
                            </extraServerContentDirs>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
